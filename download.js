// Generated by CoffeeScript 1.10.0
(function() {
  var URL, checkSaveDir, client, download, downloadRec, fs, path;

  client = require('cheerio-httpcli');

  fs = require('fs');

  path = require('path');

  URL = require('url');

  download = function(url, savepath, callback) {
    var http, outfile, req;
    http = require('http');
    fs = require('fs');
    outfile = fs.createWriteStream(savepath);
    return req = http.get(url, function(res) {
      res.pipe(outfile);
      return res.on('end', function() {
        outfile.close();
        return callback();
      });
    });
  };

  checkSaveDir = function(fname) {
    var d, dir, dirlist, i, j, len, p, results;
    dir = path.dirname(fname);
    dirlist = dir.split("/");
    p = "";
    results = [];
    for (i = j = 0, len = dirlist.length; j < len; i = ++j) {
      d = dirlist[i];
      p += d + "/";
      console.log("p>> " + p);
      if (!fs.existsSync(p)) {
        results.push(fs.mkdirSync(p));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  downloadRec = function(list, TARGET_URL, LINK_LEVEL, url, level) {
    var base, us;
    if (!(level >= LINK_LEVEL)) {
      if (!list[url]) {
        console.log("YES>> " + url);
        list[url] = true;
        us = TARGET_URL.split("/");
        us.pop();
        base = us.join("/");
        if (!(url.indexOf(base) < 0)) {
          client.fetch(url, {}, function(err, $, res) {
            var savepath;
            $("a").each(function(idx) {
              var href;
              href = $(this).attr('href');
              console.log("before replace>> " + href + "(" + level + ")");
              href = URL.resolve(url, href);
              href = href.replace(/\#.+$/, "");
              console.log("replaced>> " + href + "(" + level + ")");
              return downloadRec(list, TARGET_URL, LINK_LEVEL, href, level + 1);
            });
            if (url.substr(url.length - 1, 1) === '/') {
              url += "index.html";
            }
            savepath = "/usr/src/app/site/" + url.split("/").splice(2).join("/");
            checkSaveDir(savepath);
            console.log(savepath);
            return fs.writeFileSync(savepath, $.html());
          });
        }
      }
    }
    return list;
  };

  module.exports = {
    'download': download,
    'downloadRec': downloadRec
  };

}).call(this);

//# sourceMappingURL=download.js.map
